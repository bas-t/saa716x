--- drivers/pci/msi.c	2017-05-13 22:19:49.000000000 +0200
+++ drivers/pci/msi.c	2017-05-15 08:45:34.582160103 +0200
@@ -975,6 +975,27 @@
 	return msix_capability_init(dev, entries, nvec, affd);
 }
 
+/**
+ * pci_enable_msix - configure device's MSI-X capability structure
+ * @dev: pointer to the pci_dev data structure of MSI-X device function
+ * @entries: pointer to an array of MSI-X entries (optional)
+ * @nvec: number of MSI-X irqs requested for allocation by device driver
+ *
+ * Setup the MSI-X capability structure of device function with the number
+ * of requested irqs upon its software driver call to request for
+ * MSI-X mode enabled on its hardware device function. A return of zero
+ * indicates the successful configuration of MSI-X capability structure
+ * with new allocated MSI-X irqs. A return of < 0 indicates a failure.
+ * Or a return of > 0 indicates that driver request is exceeding the number
+ * of irqs or MSI-X vectors available. Driver should use the returned value to
+ * re-send its request.
+ **/
+int pci_enable_msix(struct pci_dev *dev, struct msix_entry *entries, int nvec)
+{
+	return __pci_enable_msix(dev, entries, nvec, NULL);
+}
+EXPORT_SYMBOL(pci_enable_msix);
+
 static void pci_msix_shutdown(struct pci_dev *dev)
 {
 	struct msi_desc *entry;
